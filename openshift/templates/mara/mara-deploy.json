{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "annotations": {
      "description": "Deployment template for a ${NAME} instance."
    }
  },
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the container."
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          }
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${NAME}:${TAG_NAME}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "HOST_IP",
                    "value": "${HOST_NAME}"
                  },
                  {
                    "name": "HOST_PORT",
                    "value": "${HOST_PORT}"
                  },
                  {
                    "name": "VONX_API_URL",
                    "value": "${VONX_API_URL}"
                  },
                  {
                    "name": "BC_REG_DB_HOST",
                    "value": "${BC_REG_DB_HOST}"
                  },
                  {
                    "name": "BC_REG_DB_PORT",
                    "value": "${BC_REG_DB_PORT}"
                  },
                  {
                    "name": "BC_REG_DB_DATABASE",
                    "value": "${BC_REG_DB_DATABASE}"
                  },
                  {
                    "name": "BC_REG_DB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${BC_REG_DB_HOST}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "BC_REG_DB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${BC_REG_DB_HOST}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "EVENT_PROC_DB_HOST",
                    "value": "${EVENT_PROC_DB_HOST}"
                  },
                  {
                    "name": "EVENT_PROC_DB_PORT",
                    "value": "${EVENT_PROC_DB_PORT}"
                  },
                  {
                    "name": "EVENT_PROC_DB_DATABASE",
                    "value": "${EVENT_PROC_DB_DATABASE}"
                  },
                  {
                    "name": "EVENT_PROC_DB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${EVENT_PROC_DB_HOST}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "EVENT_PROC_DB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${EVENT_PROC_DB_HOST}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "MARA_DB_HOST",
                    "value": "${MARA_DB_HOST}"
                  },
                  {
                    "name": "MARA_DB_PORT",
                    "value": "${MARA_DB_PORT}"
                  },
                  {
                    "name": "MARA_DB_DATABASE",
                    "value": "${MARA_DB_DATABASE}"
                  },
                  {
                    "name": "MARA_DB_USER",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${MARA_DB_HOST}",
                        "key": "database-user"
                      }
                    }
                  },
                  {
                    "name": "MARA_DB_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef": {
                        "name": "${MARA_DB_HOST}",
                        "key": "database-password"
                      }
                    }
                  },
                  {
                    "name": "START_CRON",
                    "value": "${START_CRON}"
                  },
                  {
                    "name": "WEBHOOK_URL",
                    "value": "${WEBHOOK_URL}"
                  },
                  {
                    "name": "WEBHOOK_LEVEL",
                    "value": "${WEBHOOK_LEVEL}"
                  },
                  {
                    "name": "PROJECT_NAME",
                    "value": "${PROJECT_NAME}"
                  },
                  {
                    "name": "FRIENDLY_PROJECT_NAME",
                    "value": "${FRIENDLY_PROJECT_NAME}"
                  },
                  {
                    "name": "NOTIFY_OF_CREDENTIAL_POSTING_ERRORS",
                    "value": "${NOTIFY_OF_CREDENTIAL_POSTING_ERRORS}"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 30,
                  "initialDelaySeconds": 300,
                  "httpGet": {
                    "path": "/",
                    "port": 8080
                  }
                },
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the objects defined in this template.",
      "required": true,
      "value": "mara"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "required": true,
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "value": "devex-von-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "HOST_NAME",
      "displayName": "Mara Host Name or IP",
      "description": "The hostname or IP address on which to host the application.",
      "required": false,
      "value": "0.0.0.0"
    },
    {
      "name": "HOST_PORT",
      "displayName": "Mara Host Port",
      "description": "The Port on which the host applicationshould listen.",
      "required": false,
      "value": "8080"
    },
    {
      "name": "VONX_API_URL",
      "displayName": "VON-X API URL",
      "description": "VON-X API URL.",
      "required": true,
      "value": "http://bcreg-x-agent:8080/bcreg"
    },
    {
      "name": "BC_REG_DB_HOST",
      "displayName": "BC Registries Database Host",
      "description": "BC Registries Database Host.",
      "required": true,
      "value": "postgresql-oracle-fdw"
    },
    {
      "name": "BC_REG_DB_PORT",
      "displayName": "BC Registries Database Port",
      "description": "BC Registries Database Port.",
      "required": true,
      "value": "5432"
    },
    {
      "name": "BC_REG_DB_DATABASE",
      "displayName": "BC Registries Database Name",
      "description": "BC Registries Database Name.",
      "required": true,
      "value": "BC_REGISTRIES"
    },
    {
      "name": "EVENT_PROC_DB_HOST",
      "displayName": "Event Processor Database Host",
      "description": "Event Processor Database Host.",
      "required": true,
      "value": "event-db"
    },
    {
      "name": "EVENT_PROC_DB_PORT",
      "displayName": "Event Processor Database Port",
      "description": "Event Processor Database Port.",
      "required": true,
      "value": "5432"
    },
    {
      "name": "EVENT_PROC_DB_DATABASE",
      "displayName": "Event Processor Database Name",
      "description": "Event Processor Database Name.",
      "required": true,
      "value": "bc_reg_db"
    },
    {
      "name": "MARA_DB_HOST",
      "displayName": "Mara Database Host",
      "description": "Mara Database Host.",
      "required": true,
      "value": "mara-db"
    },
    {
      "name": "MARA_DB_PORT",
      "displayName": "Mara Database Port",
      "description": "Mara Database Port.",
      "required": true,
      "value": "5432"
    },
    {
      "name": "MARA_DB_DATABASE",
      "displayName": "Mara Database Name",
      "description": "Mara Database Name.",
      "required": true,
      "value": "mara_db"
    },
    {
      "name": "START_CRON",
      "displayName": "Start Cron Jobs",
      "description": "Start go-crond and load the cron jobs from the CRON_FOLDER.",
      "required": false,
      "value": "1"
    },
    {
      "name": "WEBHOOK_URL",
      "displayName": "Webhook URL",
      "description": "The URL of the webhook to use for notifications.  If not specified, the webhook integration feature is disabled.",
      "required": false,
      "value": ""
    },
    {
      "name": "WEBHOOK_LEVEL",
      "displayName": "Webhook Log Level",
      "description": "The webhook log level filter; 0=Error, 1=Warning, 2=Info",
      "required": false,
      "value": "2"
    },
    {
      "name": "PROJECT_NAME",
      "displayName": "Project Name (Environment Id)",
      "description": "The name or Id of the project.  This variable is used by the webhook integration to identify the project in which the backup notifications originate.",
      "required": false,
      "value": ""
    },
    {
      "name": "FRIENDLY_PROJECT_NAME",
      "displayName": "Friendly Project Name",
      "description": "The human readable name of the Project.  This variable is used by the webhook integration to identify the project in which the backup notifications originate.",
      "required": false,
      "value": ""
    },
    {
      "name": "NOTIFY_OF_CREDENTIAL_POSTING_ERRORS",
      "displayName": "Notify of Credential Posting Errors",
      "description": "Use NOTIFY_OF_CREDENTIAL_POSTING_ERRORS to turn error notification on(true)/off(false); off by default.  It's recommended to have this off during bulk data loads as errors in these situations can cause an unnecessary flood of notifications.",
      "required": true,
      "value": "false"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "Resources CPU Request",
      "description": "The resources CPU request (in cores) for this build.",
      "required": true,
      "value": "10m"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "Resources CPU Limit",
      "description": "The resources CPU limit (in cores) for this build.",
      "required": true,
      "value": "1000m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Resources Memory Request",
      "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "10Mi"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Resources Memory Limit",
      "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
      "required": true,
      "value": "2Gi"
    }
  ]
}